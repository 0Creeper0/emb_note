1、嵌入式系统总是要用户对变量或寄存器进行位操作。给定一个整型变量 a，写两段代码，第一个设置 a 的 bit 3， 第二个清除 a 的 bit 3。在以上两个操作中，要保持其它位不变。
设置( a |= 0x04;   ) 清除(  a &= ~0x04;  )

	需要对第三位操作其他位不变,
	置一时用或运算, (任意数|1)都为1, (任意数|0)都不变
	需要　0x04:0000 0100
	清零是用与运算, (任意数&1)都不变, (任意数&0)都为0
	需要　~0x04:1111 1011

2、以下为 linux 下的 64 位 C 程序，请计算 sizeof 的值 
char str[10] = “Hello” ; char *p = str ; 请计算:sizeof ( str ) =( 10  )
	sizeof(str)是计算数组的字节长度
void Func ( char str[100]){......} 请计算:sizeof( str ) = (  无  )
	str是形参
void *p = malloc( 100 );
请计算:sizeof ( p ) =(   8   )
	p是指针变量，长度是８个字节

3、printf 函数的返回值表示( 被打印的字符数 ) 含义。 
4、
int main()
{ 
	int a[3] = {1, 2}; 
	int *p, *q;
	p = a; q = &a[2]; 
	printf("%d", a[q-p]); 
	return 0; 
}
上述程序段输出结果为: (   0   )

	初始化之后a数组为{1, 2, 0}
	q - p = 2
	a[2] == 0;

5、 递归函数 f(n) = f(n-1)+n(n>0)的结束条件是(     n == 1;     ) 
6、 写出三种排序算法(  冒泡排序，选择排序，插入排序   ) 
7、 有如下 C 语言程序: 
#include<stdio.h>
int main()
{  
	int a,b; 
	for(a=1,b=1;a<=100;a++) { 
		if(b>=10) break; 
		if(b%3==1) {b+=3; continue; } 
	} 
	printf("%d\n",a); 
} 
则程序运行后的输出结果是(    4    )
	a == 1, b == 1, b == 4, a == 2, b == 7, a == 3, b == 10, a == 4, break;
